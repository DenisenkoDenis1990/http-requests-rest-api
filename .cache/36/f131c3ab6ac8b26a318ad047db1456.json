{"id":"../node_modules/date.js/lib/tokenize.js","dependencies":[{"name":"/Users/denysenki/Documents/GitHub/http-requests-rest-api/package.json","includedInParent":true,"mtime":1659879824876},{"name":"/Users/denysenki/Documents/GitHub/http-requests-rest-api/node_modules/date.js/package.json","includedInParent":true,"mtime":1659879821661},{"name":"./util","loc":{"line":6,"column":19,"index":99},"parent":"/Users/denysenki/Documents/GitHub/http-requests-rest-api/node_modules/date.js/lib/tokenize.js","resolved":"/Users/denysenki/Documents/GitHub/http-requests-rest-api/node_modules/date.js/lib/util.js"},{"name":"./symbol","loc":{"line":7,"column":21,"index":130},"parent":"/Users/denysenki/Documents/GitHub/http-requests-rest-api/node_modules/date.js/lib/tokenize.js","resolved":"/Users/denysenki/Documents/GitHub/http-requests-rest-api/node_modules/date.js/lib/symbol.js"},{"name":"./maps.json","loc":{"line":8,"column":19,"index":161},"parent":"/Users/denysenki/Documents/GitHub/http-requests-rest-api/node_modules/date.js/lib/tokenize.js","resolved":"/Users/denysenki/Documents/GitHub/http-requests-rest-api/node_modules/date.js/lib/maps.json"}],"generated":{"js":"// Module to tokenize a string into CFG symbols\n\n/**\n * Module Dependencies\n */\nvar util = require('./util')\nvar symbol = require('./symbol')\nvar maps = require('./maps.json')\n\n/**\n * regexes for Subnormal forms\n */\n\nvar re = {\n  // 12/20 - 12/21, 2012/12 - 2013/12\n  MMsDDdMMsDD: /(?!\\d{1,4}\\/\\d{1,4}\\s*-\\s*\\d{1,4}\\/\\d{1,4}\\/)(\\d{1,4})\\/(\\d{1,4})\\s*-\\s*(\\d{1,4})\\/(\\d{1,4})/g,\n  // 12/22 - 23, 2012/10 - 12\n  MMsDDdDD: /(?!\\d{1,4}\\/\\d{1,4}\\s*-\\s*\\d{1,4}\\/)(\\d{1,4})\\/(\\d{1,4})\\s*-\\s*(\\d{1,4})/g,\n  // 12/24, 2012/12\n  MMsDD: /(?!\\d{1,4}\\/\\d{1,4}\\/)(\\d{1,4})\\/(\\d{1,4})/g,\n  // 05:30pm, 0530pm, 1730, 1730pm, 1730[re:h], remove the [re:h]\n  hhcmm: /(\\s+\\d{1,2}|^\\d{1,2})\\:?(\\d{2})\\s*(\\S+)*/g\n}\n\n/**\n * Export `tokenize`\n */\n\nmodule.exports = tokenize\n\n/**\n * Parse and tokenize a string into array of valid CFG symbols, in these steps:\n * 1. parse normal forms\n * 2. parse subnormal forms\n * 3. parse english forms\n * @param  {string} str The input string.\n * @return {JSON}     {str, tokensIn, tokensOut, symbols}\n */\nfunction tokenize (str) {\n  // split num from alphabets\n  str = (' ' + str)\n    .replace(/\\s+(\\d+)([a-zA-Z]+)/g, ' $1 $2')\n    .replace(/\\s+([a-zA-Z]+)(\\d+)/g, ' $1 $2')\n    .replace(/\\s+/g, ' ')\n    .replace(/^\\s+/, '')\n  // 1. 2. parse normal and subnormal forms\n  var p = parseNormal12(str),\n    pStr = p.str,\n    tokens = pStr.split(' '),\n    symbols = []\n  // clean the non-normal tokens a bit, allow to be wrapped by words only\n  for (var i = 0; i < tokens.length; i++) {\n    if (!tokens[i].match(util.reT)) {\n      tokens[i] = tokens[i].replace(/^\\W+/, '').replace(/\\W+$/, '')\n    }\n  }\n\n  // 3. parse english forms\n  for (var i = 0; i < tokens.length; i++) {\n    var tok = tokens[i]\n    var oneGram = tok,\n      twoGram = tok + ' ' + (tokens[i + 1] || ''),\n      oneSym = symbol(oneGram),\n      twoSym = symbol(twoGram)\n    if (twoSym && twoSym.value == oneSym.value) {\n      // if lemmatization must happen for both,\n      // pick the longer, skip next token\n      // skip this once, reset skip\n      i++\n      symbols.push(symbol(twoGram))\n    } else {\n      symbols.push(symbol(oneGram))\n    }\n  }\n  return {\n    str: pStr,\n    tokensOut: p.tokensOut,\n    tokensIn: p.tokensIn,\n    symbols: symbols\n  }\n}\n\n/**\n * Run 1. parseNormal then 2. parseNormal2, return the parsed string with T-format tokens.\n * @private\n * @param  {string} str The input string\n * @return {JSON}     Parsed string\n */\nfunction parseNormal12 (str) {\n  var p1 = parseNormal1(str)\n  // find tokens that are purely normal, and reinject into string\n  var p1TokensOut = p1.tokensOut.filter(notSubnormal)\n  var p1Str = injectNormal(str, p1TokensOut)\n  // now parse the subnormal\n  var p2 = parseNormal2(p1Str, [], [])\n  // the tokens that taken out, and their replacements, in order\n  var pTokensOut = p1.tokensOut.concat(p2.tokensOut)\n  var pTokensIn = p1.tokensIn.concat(p2.tokensIn)\n  return {\n    str: p2.str,\n    tokensOut: pTokensOut,\n    tokensIn: pTokensIn\n  }\n}\n\n/**\n * 1. Parse normal forms. Try to parse and return a normal Date, parseable from new Date(str), by continuously trimming off its tail and retry until either get a valid date, or string runs out.\n * Doesn't parse string with length <5\n * @private\n * @param  {string} str The input string.\n * @return {string}     A Date in stdT string, or null.\n */\nfunction parseNormal1 (str) {\n  // keep chopping off tail until either get a valid date, or string runs out\n  // array of parsed date and the string consumed\n  var tokensIn = [],\n    tokensOut = []\n  // ensure single spacing\n  str = str.replace(/\\s+/g, ' ')\n  // tokenize by space\n  var strArr = str.split(/\\s+/g)\n\n  // init the normalDate and head string used\n  var normalDate = null,\n    head = ''\n  // do while there's still string to go\n  while (strArr.length) {\n    head = (head + ' ' + strArr.shift()).trim()\n    try {\n      normalDate = util.stdT(new Date(head))\n      // Extend head: if parse successful, extend continuously until failure, then that's the longest parseable head string, ...<date>\n      var advanceHead = head + ' ' + strArr[0]\n      while (1) {\n        try {\n          var advanceDate = util.stdT(new Date(advanceHead))\n          if (advanceDate != 'Invalid Date') {\n            // if advanceDate is parseable, set to current, update heads\n            var normalDate = advanceDate\n            head = head + ' ' + strArr.shift()\n            advanceHead = advanceHead + ' ' + strArr[0]\n          } else {\n            break\n          }\n        } catch (e) {\n          // when fail, just break\n          break\n        }\n      }\n      // Shrink head: from the whole parseable head ...<date>, trim front till we get <date>\n      while (1) {\n        try {\n          if (util.stdT(new Date(head.replace(/^\\s*\\S+\\s*/, ''))) != normalDate) {\n            // front token eaten causes change, dont update head\n            break\n          } else {\n            // update head\n            head = head.replace(/^\\s*\\S+\\s*/, '')\n          }\n        } catch (e) {\n          break\n        }\n      }\n      // only consider a valid parse if the parsed str is long enough\n      if (head.length > 6) {\n        tokensIn.push(normalDate)\n        // get head = <date> only, then reset\n        tokensOut.push(head)\n      }\n      head = ''\n    } catch (e) {}\n  }\n  return { tokensIn: tokensIn, tokensOut: tokensOut }\n}\n\n/**\n * 2. Parse subnormal forms after parseNormal. Gradually replace tokens of the input string while parseable.\n * @private\n */\nfunction parseNormal2 (str, tokensIn, tokensOut) {\n  var m, res\n  if (m = re.MMsDDdMMsDD.exec(str)) {\n    // 12/20 - 12/21\n    var yMd1 = yMdParse(m[1], m[2])\n    var yMd2 = yMdParse(m[3], m[4])\n    res = ' t:' + yMd1 + ',dt: - t:' + yMd2 + ',dt: '\n  } else if (m = re.MMsDDdDD.exec(str)) {\n    // 12/22 - 23\n    var yMd1 = yMdParse(m[1], m[2])\n    var yMd2 = yMdParse(m[1], m[3])\n    res = ' t:' + yMd1 + ',dt: - t:' + yMd2 + ',dt: '\n  } else if (m = re.MMsDD.exec(str)) {\n    // if year\n    var yMd = yMdParse(m[1], m[2])\n    // 12/24\n    res = ' t:' + yMd + ',dt: '\n  } else if (m = re.hhcmm.exec(str)) {\n    // 05:30pm, 0530pm, 1730, 1730pm, 1730[re:h], remove the [re:h]\n    res = ' t:' + m[1].trim() + 'h' + m[2] + 'm' + ',dt: ' + (m[3] || '')\n  } else {\n    // exit recursion if hits here\n    return {\n      str: str,\n      tokensIn: tokensIn,\n      tokensOut: tokensOut\n    }\n  }\n  // recurse down till no more substitution (CFG is not cyclic, so ok)\n  tokensOut.push(m[0])\n  tokensIn.push(res)\n  str = parseNormal2(str.replace(m[0], res), tokensIn, tokensOut).str\n  return {\n    str: str,\n    tokensIn: tokensIn,\n    tokensOut: tokensOut\n  }\n}\n\n// ////////////////////\n// Helper functions //\n// ////////////////////\n\n/**\n * Try to parse two tokens for T form into MM/dd, or MM/yyyy if either token hsa length 4.\n * @private\n * @param  {string} token1\n * @param  {string} token2\n * @return {string}        in the form <y><M><d>\n */\nfunction yMdParse (token1, token2) {\n  var part0 = [token1, token2].filter(function (token) {\n    return token.length == 4\n  })\n  var part1 = [token1, token2].filter(function (token) {\n    return token.length != 4\n  })\n  var y = part0[0] ? part0[0] + 'y' : ''\n  var M = part1[0] + 'M'\n  var d = part1[1] ? part1[1] + 'd' : ''\n  return y + M + d\n}\n\n/**\n * Check if the dateStr is strictly normal and not subnormal. Used to extract parseNormal2 overrides.\n * @private\n * @param  {string} dateStr\n * @return {Boolean}\n */\nfunction notSubnormal (dateStr) {\n  var subnormalStr = parseNormal2(dateStr, [], []).str\n  // remove T and see if still has words\n  var noT = subnormalStr.replace(/t\\:\\S*,dt\\:\\S*(\\s*-\\s*t\\:\\S*,dt\\:\\S*)?/, '')\n  return /\\w+/g.exec(noT) != null\n}\n\n/**\n * Given a string and array of its parsed phrases, convert them into T stdT then T format, and inject into the original string, return.\n * @private\n * @param  {string} str       The original string.\n * @param  {Array} parsedArr The parsed phrases from the string.\n * @return {string}           The string with parsed phrases replaced in T format.\n *\n * @example\n * injectNormal('05 October 2011 14:48 UTC 08/11 2020', [ '05 October 2011 14:48 UTC', '08/11 2020' ])\n * // => 't:2011y10M05d14h48m00.000s,dt: t:2020y08M11d04h00m00.000s,dt: '\n */\nfunction injectNormal (str, parsedArr) {\n  for (var i = 0; i < parsedArr.length; i++) {\n    var parsed = parsedArr[i]\n    var T = util.stdTtoT(util.stdT(new Date(parsed)))\n    str = str.replace(parsed, T)\n  }\n  return str\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/date.js/lib/tokenize.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}}],"sources":{"../node_modules/date.js/lib/tokenize.js":"// Module to tokenize a string into CFG symbols\n\n/**\n * Module Dependencies\n */\nvar util = require('./util')\nvar symbol = require('./symbol')\nvar maps = require('./maps.json')\n\n/**\n * regexes for Subnormal forms\n */\n\nvar re = {\n  // 12/20 - 12/21, 2012/12 - 2013/12\n  MMsDDdMMsDD: /(?!\\d{1,4}\\/\\d{1,4}\\s*-\\s*\\d{1,4}\\/\\d{1,4}\\/)(\\d{1,4})\\/(\\d{1,4})\\s*-\\s*(\\d{1,4})\\/(\\d{1,4})/g,\n  // 12/22 - 23, 2012/10 - 12\n  MMsDDdDD: /(?!\\d{1,4}\\/\\d{1,4}\\s*-\\s*\\d{1,4}\\/)(\\d{1,4})\\/(\\d{1,4})\\s*-\\s*(\\d{1,4})/g,\n  // 12/24, 2012/12\n  MMsDD: /(?!\\d{1,4}\\/\\d{1,4}\\/)(\\d{1,4})\\/(\\d{1,4})/g,\n  // 05:30pm, 0530pm, 1730, 1730pm, 1730[re:h], remove the [re:h]\n  hhcmm: /(\\s+\\d{1,2}|^\\d{1,2})\\:?(\\d{2})\\s*(\\S+)*/g\n}\n\n/**\n * Export `tokenize`\n */\n\nmodule.exports = tokenize\n\n/**\n * Parse and tokenize a string into array of valid CFG symbols, in these steps:\n * 1. parse normal forms\n * 2. parse subnormal forms\n * 3. parse english forms\n * @param  {string} str The input string.\n * @return {JSON}     {str, tokensIn, tokensOut, symbols}\n */\nfunction tokenize (str) {\n  // split num from alphabets\n  str = (' ' + str)\n    .replace(/\\s+(\\d+)([a-zA-Z]+)/g, ' $1 $2')\n    .replace(/\\s+([a-zA-Z]+)(\\d+)/g, ' $1 $2')\n    .replace(/\\s+/g, ' ')\n    .replace(/^\\s+/, '')\n  // 1. 2. parse normal and subnormal forms\n  var p = parseNormal12(str),\n    pStr = p.str,\n    tokens = pStr.split(' '),\n    symbols = []\n  // clean the non-normal tokens a bit, allow to be wrapped by words only\n  for (var i = 0; i < tokens.length; i++) {\n    if (!tokens[i].match(util.reT)) {\n      tokens[i] = tokens[i].replace(/^\\W+/, '').replace(/\\W+$/, '')\n    }\n  }\n\n  // 3. parse english forms\n  for (var i = 0; i < tokens.length; i++) {\n    var tok = tokens[i]\n    var oneGram = tok,\n      twoGram = tok + ' ' + (tokens[i + 1] || ''),\n      oneSym = symbol(oneGram),\n      twoSym = symbol(twoGram)\n    if (twoSym && twoSym.value == oneSym.value) {\n      // if lemmatization must happen for both,\n      // pick the longer, skip next token\n      // skip this once, reset skip\n      i++\n      symbols.push(symbol(twoGram))\n    } else {\n      symbols.push(symbol(oneGram))\n    }\n  }\n  return {\n    str: pStr,\n    tokensOut: p.tokensOut,\n    tokensIn: p.tokensIn,\n    symbols: symbols\n  }\n}\n\n/**\n * Run 1. parseNormal then 2. parseNormal2, return the parsed string with T-format tokens.\n * @private\n * @param  {string} str The input string\n * @return {JSON}     Parsed string\n */\nfunction parseNormal12 (str) {\n  var p1 = parseNormal1(str)\n  // find tokens that are purely normal, and reinject into string\n  var p1TokensOut = p1.tokensOut.filter(notSubnormal)\n  var p1Str = injectNormal(str, p1TokensOut)\n  // now parse the subnormal\n  var p2 = parseNormal2(p1Str, [], [])\n  // the tokens that taken out, and their replacements, in order\n  var pTokensOut = p1.tokensOut.concat(p2.tokensOut)\n  var pTokensIn = p1.tokensIn.concat(p2.tokensIn)\n  return {\n    str: p2.str,\n    tokensOut: pTokensOut,\n    tokensIn: pTokensIn\n  }\n}\n\n/**\n * 1. Parse normal forms. Try to parse and return a normal Date, parseable from new Date(str), by continuously trimming off its tail and retry until either get a valid date, or string runs out.\n * Doesn't parse string with length <5\n * @private\n * @param  {string} str The input string.\n * @return {string}     A Date in stdT string, or null.\n */\nfunction parseNormal1 (str) {\n  // keep chopping off tail until either get a valid date, or string runs out\n  // array of parsed date and the string consumed\n  var tokensIn = [],\n    tokensOut = []\n  // ensure single spacing\n  str = str.replace(/\\s+/g, ' ')\n  // tokenize by space\n  var strArr = str.split(/\\s+/g)\n\n  // init the normalDate and head string used\n  var normalDate = null,\n    head = ''\n  // do while there's still string to go\n  while (strArr.length) {\n    head = (head + ' ' + strArr.shift()).trim()\n    try {\n      normalDate = util.stdT(new Date(head))\n      // Extend head: if parse successful, extend continuously until failure, then that's the longest parseable head string, ...<date>\n      var advanceHead = head + ' ' + strArr[0]\n      while (1) {\n        try {\n          var advanceDate = util.stdT(new Date(advanceHead))\n          if (advanceDate != 'Invalid Date') {\n            // if advanceDate is parseable, set to current, update heads\n            var normalDate = advanceDate\n            head = head + ' ' + strArr.shift()\n            advanceHead = advanceHead + ' ' + strArr[0]\n          } else {\n            break\n          }\n        } catch (e) {\n          // when fail, just break\n          break\n        }\n      }\n      // Shrink head: from the whole parseable head ...<date>, trim front till we get <date>\n      while (1) {\n        try {\n          if (util.stdT(new Date(head.replace(/^\\s*\\S+\\s*/, ''))) != normalDate) {\n            // front token eaten causes change, dont update head\n            break\n          } else {\n            // update head\n            head = head.replace(/^\\s*\\S+\\s*/, '')\n          }\n        } catch (e) {\n          break\n        }\n      }\n      // only consider a valid parse if the parsed str is long enough\n      if (head.length > 6) {\n        tokensIn.push(normalDate)\n        // get head = <date> only, then reset\n        tokensOut.push(head)\n      }\n      head = ''\n    } catch (e) {}\n  }\n  return { tokensIn: tokensIn, tokensOut: tokensOut }\n}\n\n/**\n * 2. Parse subnormal forms after parseNormal. Gradually replace tokens of the input string while parseable.\n * @private\n */\nfunction parseNormal2 (str, tokensIn, tokensOut) {\n  var m, res\n  if (m = re.MMsDDdMMsDD.exec(str)) {\n    // 12/20 - 12/21\n    var yMd1 = yMdParse(m[1], m[2])\n    var yMd2 = yMdParse(m[3], m[4])\n    res = ' t:' + yMd1 + ',dt: - t:' + yMd2 + ',dt: '\n  } else if (m = re.MMsDDdDD.exec(str)) {\n    // 12/22 - 23\n    var yMd1 = yMdParse(m[1], m[2])\n    var yMd2 = yMdParse(m[1], m[3])\n    res = ' t:' + yMd1 + ',dt: - t:' + yMd2 + ',dt: '\n  } else if (m = re.MMsDD.exec(str)) {\n    // if year\n    var yMd = yMdParse(m[1], m[2])\n    // 12/24\n    res = ' t:' + yMd + ',dt: '\n  } else if (m = re.hhcmm.exec(str)) {\n    // 05:30pm, 0530pm, 1730, 1730pm, 1730[re:h], remove the [re:h]\n    res = ' t:' + m[1].trim() + 'h' + m[2] + 'm' + ',dt: ' + (m[3] || '')\n  } else {\n    // exit recursion if hits here\n    return {\n      str: str,\n      tokensIn: tokensIn,\n      tokensOut: tokensOut\n    }\n  }\n  // recurse down till no more substitution (CFG is not cyclic, so ok)\n  tokensOut.push(m[0])\n  tokensIn.push(res)\n  str = parseNormal2(str.replace(m[0], res), tokensIn, tokensOut).str\n  return {\n    str: str,\n    tokensIn: tokensIn,\n    tokensOut: tokensOut\n  }\n}\n\n// ////////////////////\n// Helper functions //\n// ////////////////////\n\n/**\n * Try to parse two tokens for T form into MM/dd, or MM/yyyy if either token hsa length 4.\n * @private\n * @param  {string} token1\n * @param  {string} token2\n * @return {string}        in the form <y><M><d>\n */\nfunction yMdParse (token1, token2) {\n  var part0 = [token1, token2].filter(function (token) {\n    return token.length == 4\n  })\n  var part1 = [token1, token2].filter(function (token) {\n    return token.length != 4\n  })\n  var y = part0[0] ? part0[0] + 'y' : ''\n  var M = part1[0] + 'M'\n  var d = part1[1] ? part1[1] + 'd' : ''\n  return y + M + d\n}\n\n/**\n * Check if the dateStr is strictly normal and not subnormal. Used to extract parseNormal2 overrides.\n * @private\n * @param  {string} dateStr\n * @return {Boolean}\n */\nfunction notSubnormal (dateStr) {\n  var subnormalStr = parseNormal2(dateStr, [], []).str\n  // remove T and see if still has words\n  var noT = subnormalStr.replace(/t\\:\\S*,dt\\:\\S*(\\s*-\\s*t\\:\\S*,dt\\:\\S*)?/, '')\n  return /\\w+/g.exec(noT) != null\n}\n\n/**\n * Given a string and array of its parsed phrases, convert them into T stdT then T format, and inject into the original string, return.\n * @private\n * @param  {string} str       The original string.\n * @param  {Array} parsedArr The parsed phrases from the string.\n * @return {string}           The string with parsed phrases replaced in T format.\n *\n * @example\n * injectNormal('05 October 2011 14:48 UTC 08/11 2020', [ '05 October 2011 14:48 UTC', '08/11 2020' ])\n * // => 't:2011y10M05d14h48m00.000s,dt: t:2020y08M11d04h00m00.000s,dt: '\n */\nfunction injectNormal (str, parsedArr) {\n  for (var i = 0; i < parsedArr.length; i++) {\n    var parsed = parsedArr[i]\n    var T = util.stdTtoT(util.stdT(new Date(parsed)))\n    str = str.replace(parsed, T)\n  }\n  return str\n}\n"},"lineCount":274}},"error":null,"hash":"5c0e5ce3df0245561c15dbb040942145","cacheData":{"env":{}}}